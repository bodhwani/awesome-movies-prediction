devtools::install_github("nicolewhite/RNeo4j")
install.packages("RNeo4j")
install.packages("/path/to/file.tar.gz", repos=NULL, type="source")
install.packages("/Users/Vinit/Desktop/RNeo4j-1.6.1.tar.gz", repos=NULL, type="source")
2+2
library(RNeo4j)
ls
graph = startGraph("http://localhost:7474/db/data/")
require(stringr)
WordList <- str_split(readLines(“movies_reviews.txt”), pattern = " ")
text<-paste(unlist(WordList), collapse=' ')
str(text)
library(dplyr)
text_df <- data_frame(line = 1, text = text)
text_df
library(tidytext)
text_df2 <- text_df %>%
unnest_tokens(word,text)
data(stop_words)
text_df2 <- text_df2 %>%
anti_join(stop_words)
tibble<-text_df2 %>%
count(word,sort=TRUE)
tibblefiltered = tibble %>% filter(n > 4)
#Wordclouds
library(wordcloud)
text_df2 %>%
anti_join(stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, colors=brewer.pal(8, "Dark2")))
cd
text_df2 <- text_df2 %>%
anti_join(stop_words)
install.packages("tidytext", repos='http://cran.us.r-project.org')
install.packages("tidytext", repos='https://CRAN.R-project.org/package=tidytext ')
setRepositories()
chooseCRANmirror
chooseCRANmirror()
library(installr)
install.packages("tidytext", repos='http://cran.r-project.org/src/contrib/Archive/XXXX/XXXX_A.B.C.tar.gz')
text<-paste(unlist(WordList), collapse=' ')
str(text)
library(dplyr)
install.packages("stop_words", repos='http://cran.us.r-project.org')
install.packages("http://www.lepem.ufc.br/jaa/colorout_1.1-0.tar.gz", repos=NULL)
install.packages("https://github.com/hadley/devtools/archive/v1.7.0.tar.gz",
repos=NULL, method="libcurl")
install.packages("http://github.com/hadley/devtools/archive/v1.7.0.tar.gz",
repos=NULL, method="wget")
str(text)
require(stringr)
WordList <- str_split(readLines("movies_reviews.txt"), pattern = " ")
text<-paste(unlist(WordList), collapse=' ')
str(text)
library(dplyr)
text_df <- data_frame(line = 1, text = text)
text_df
library(tidytext)
text_df2 <- text_df %>%
unnest_tokens(word,text)
data(stop_words)
text_df2 <- text_df2 %>%
anti_join(stop_words)
tibble<-text_df2 %>%
count(word,sort=TRUE)
tibblefiltered = tibble %>% filter(n > 4)
#Wordclouds
library(wordcloud)
text_df2 %>%
anti_join(stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, colors=brewer.pal(8, "Dark2")))
plot(cars)
